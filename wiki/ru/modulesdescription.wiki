= 1.0.0 Описание модулей =
= 1.1.0 GUI - работа с графическими интерфейсами =
 Одним из основных элементов пакета *ArchetypeUI* является подпакет *GUI*, содержащий модули для работы с графическими интерфейсами.
Поспакет в текущей *версии 0.3.1* содержит только модуль *GTextParser*.
= 1.1.1 Модуль GTextParser =
Модуль GTextParser является текстовым парсером и позволяет производить расчёт параметров для вывода текста на графическом объекте.
== Класс Parser(cloth, text, size = None, text_font = "normal", position = 0, struct = {}, scaner_callback = lambda TextLen, CurrentPosition: None, calc_auto = 1) ==
 Создаёт экземпляр типа *Parser*.

*cloth*
 Объект _*graphics.Image*_, либо какой-нибудь аналогичный объкт, через который будет производиться расчёт параметров текста.

*text*
 Текст, передаваемый для обработки. Должен быть строкой _*Unicode*_.

*size*
 Это необязательный параметр. Кортеж из двух целых чисел, обозначающих в пикселах ширину и высоту площади, на которой будет выводится текст. Если *size* задан как _*None*_, вышеуказанные размеры будут получены автоматически от аргумента *cloth*. По-умолчанию значение size определено как _*None*_.

*text_font*
 Это необязательный параметр. Шрифт текста. Поддерживаются все модели задания шрифтов, поддерживаемые объектом *cloth*. По-умолчанию значение *text_font* определено как _*’normal’*_.

*position*
 Это необязательный параметр. Индекс символа, с которого вы хотите вывести текст. Должен быть абсолютным целочисленным значением.  По-умолчанию значение *position* определено как _*0*_.

*struct*
 Это необязательный параметр. Словарь содержащий данные, которые снимают необходимость расчёта значительной части параметров. Смотрите более подробно в описании атрибутов.

*scaner_callback*
 Это необязательный параметр. Вызываемый объект, функция, принимающая два аргумента. Данная функция предназначена для визуализации и слежениея за процессом расчета параметров. Первый аргумент - общее колличество символов в *text*, а второй - положение сканера в тексте. Вызов *scaner_callback* происходит при завершении каждого цикла сканирования. По-умолчанию передаётся пустая функция, которая ничего не делает.

*calc_auto*
 Это необязательный параметр. По-умолчанию имеет значение _*1*_. Если имеет значение _*1*_, то при создании экземпляра автоматически происходит вызов метода *Calcsets()*. Если же *calc_auto* имеет значение _*0*_, то после создания экземпляра необходимо вызвать метод *Calcsets()*, в противном случае неизбежно возникновение ошибок из-за некоректных значений атрибутов, или отсутствия некоторых атрибутов вовсе.

== Тип Parser ==
*Экземпляр типа Parser содержит следущие атрибуты:*

*cloth*
 Объект _*graphics.Image*_, либо какой-нибудь аналогичный объкт, через который будет производиться расчёт параметров текста. Читается и записывается.

*text*
 Текст, передаваемый для обработки. Должен быть строкой Unicode. Читается и записывается. После присвоения атрибуту нового значения необходимо вызвать метод *Calcsets()*.

*size*
 Кортеж из двух целых чисел, обозначающих в пикселах ширину и высоту площади, на которой будет выводится текст. Читается и записывается. После присвоения атрибуту нового значения необходимо вызвать метод *Calcsets()*.

*text_font*
 Шрифт текста. Поддерживаются все модели задания шрифтов, поддерживаемые объектом *cloth*. Читается и записывается. После присвоения атрибуту нового значения необходимо вызвать метод *Calcsets()*.

*position*
 Индекс символа, на котором в данный момент текст. Должен принимать только абсолютные целочисленные значениея. Читается и записывается. В случае, если атрибут *text* имеет значение _*u""*_ (пустая строка), position возвращает значение _*0*_. После присвоения атрибуту *position* нового значения необходимо вызвать метод *Reload()*.
 
 Вовсе необязательно вызывать метод *Calcsets()* после изменение каждого из атрибутов *text*, *size* и *text_font*. Можно изменить несколько атрибутов, а затем вызвать *Calcsets()*.
Например,
{{{
from ArchetypeUI.GUI import GTextParser
from graphics import *
img = Image.new((176, 208))
gt = GTextParser.Parser(cloth = img, text = u"Hello world!", text_font = u"LatinPlain12") # так как мы не указали size, то он самостоятельно примет значение img.size, то есть (176, 208)
gt.text = u"I love Python!"
gt.text_font = u"LatinBold17"
gt.Calcsets()
}}}
 Вызов метода *Reload()* необходим в случае,если вы изменяете только атрибут *position*. Если же вместе с *position* вы также изменяете *text*, *size* или *text_font*, то достаточно вызвать только *Calcsets()*.

*struct*
 Читается и записывается. Этот атрибут возвращает словарь, содержащий таблицу рабивки текста.  Кроме того, здесь содержится информация о том, с каким содержанием, с каким шрифтом и на площади какой ширины выводится текст. Значение полученное от атрибута struct можно использовать при создании экземпляра типа *Parser* в дальнейшем. Либо можно изменить значение атрибута *struct* на значение полученное ранее. После присвоения атрибуту нового значения необходимо вызвать метод *Calcsets()*. Такой подход позволяет многократно увеличить скорость пересчёта всех параметров при изменении значений атрибутов *text*, *size* и *text_font*.
Например,
{{{
from ArchetypeUI.GUI import GTextParser
from graphics import *
img = Image.new((240, 320))
gt = GTextParser.Parser(cloth = img, text = u"Hello world!", text_font = u"LatinPlain12", size = (120, 320))
str1 = gt.struct
gt2 = GTextParser.Parser(cloth = img, text = u"Hello world!", text_font = u"LatinPlain12", size = (120, 320), struct = str1)
gt.text = u"I love Python!"
gt.Calcsets()
gt.text = u"Hello world!"
gt.struct = str1
gt.Calcsets()
}}}

*scaner_callback*
 Читается и записывается. Вызываемый объект, функция, принимающая два аргумента. Данная функция предназначена для визуализации и слежениея за процессом расчета параметров. Первый аргумент - общее колличество символов в *text*, а второй - положение сканера в тексте. Вызов *scaner_callback* происходит при завершении каждого цикла сканирования.
Например,
{{{
from ArchetypeUI.GUI import GTextParser
from graphics import *
import appuifw
def visualization(TextLen, CurrentPosition):
    appuifw.app.title = u"%s " % int(float(CurrentPosition) / TextLen * 100) + u"%"
t = open("c:\\gpl.txt","rb")
txt = unicode(t.read())
t.close()
img = Image.new((240, 320))
gt = GTextParser.Parser(cloth = img, text = txt, text_font = u"LatinPlain12", size = (240, 320), scaner_callback = visualization)
print "OK"
}}}

*text_len*
 Колличество символов в тексте *text*, целочисленное значение. Только для чтения.

*max*
 Высота строки в пикселах, целочисленное значение. Только для чтения.

*gap*
 Расстояние между строками в пикселах, целочисленное значение. Только для чтения.

*maxlen*
 Максимальная длина строки в пикселах, равна _*size[0]*_. Только для чтения.

*num_str*
 Количество строк, помещающиеся на площади *size*. Только для чтения.

*start_y*
 Координата _*y*_, рекомендованная для вывода первой строки. Только для чтения.

*y_coordinates*
 Кортеж, содержащий координаты _*y*_, рекомендованные для вывода строк текста. Только для чтения.

*string_list*
 Кортеж, содержащий строки, предназначенные для вывода. Только для чтения.

*string_list_q*
 Целое число, означающие колличество строк, содержащихся в *string_list*. Только для чтения.

*Экземпляр типа Parser содержит следущие методы:*

*Calcsets()*
 Производит расчёты основных параметров. Его необходимо вызывать после изменений параметров атрибутов *text*, *size* и *text_font*, а также после создания экземпляра типа *Parser*, если аргумент *calc_auto* имеет значение _*0*_.

*Reload()*
 Производит обновление атрибута *string_list* после смены значения атрибута *position*.
