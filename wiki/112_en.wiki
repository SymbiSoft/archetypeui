=== 1.1.2 TextPro module ===
*TextParser* module is the text processor, it is used for adding of varius formatting effects at text output on graphics. The work of *TextParser* module is closely connected with *GTextParser* module.
*Class TextDraw(Parser, size = None, bg = None, bg_offset = (0, 0), text_offset = (0, 0), text_color = 0x0, shadow_offset = (0, 0), shadow_color = 0xffff, scroll = (0, 4), Draw_callback = lambda: None, rotate = 0, align = 4)*
 Creates a TextDraw object.
*Parser*
 A _*GTextParser.Parser*_ object, where
*cloth* - a canvas which will be used for drawing;
*text* -  a text which will be output;
For more information about parser's work, look GTextParser module's description.
At _*GTextParser.Parser*_ creating it is needed to leave _*calc_auto*_ argument value on-default (i.e. _*0*_) and to call *Parser.Calcsets()* method after *TextDraw* object was created.
*size*
 The optional parameter. A tuple consisted of two integers meaning area sizes (in pixels) on witch text will be drawn. Setting to *size* the value of _*None*_ is equal to setting of a *bg* size. On-default the *size* value is set as _*None*_.
*bg*
 The optional parameter. A _*graphics.Image*_ object or some other analog object. Setting to *bg* the value of _*None*_ is equal to setting of a *Parser.cloth* copy. On-default the *bg* value is set as _*None*_.
*bg_offset*
 The optional parameter. A tuple consisted of two integers meaning in pixels an offset of the backgroud *bg* relatively of canvas *Parser.cloth* along coordinates _*x*_ and _*y*_. On-default the *bg_offset* value is set as _*(0, 0)*_.
*text_offset*
 The optional parameter. A tuple consisted of two integers meaning  in pixels an offset of the text contained in *Parser.string_list* relatively of background bg along coordinates _*x*_ and _*y*_. On-default the *text_offset* value is set as _*(0, 0)*_.
*text_color*
 The optional parameter. Text color. Supported all the ways of color setting supported by the *Parser.cloth* object. On-default the *text_color* value is set as  _*0x0*_.
*shadow_offset*
 The optional parameter. A tuple consisted of two integers meaning  in pixels an offset of the text shadow relatively of text along coordinates _*x*_ and _*y*_. If the *shadow_offset* value is set as _*(0, 0)*_, so shadow is absent. On-default the *shadow_offset* value is set as _*(0, 0)*_.
*shadow_color*
 The optional parameter. Text shadow color. Supported all the ways of color setting supported by the *Parser.cloth* object. On-default the *shadow_color* value is set as _*0xffff*_.
*scroll*
 The optional parameter. A tuple consisted of two integers which set a scroll parameters. If the first value is set as _*1*_, so smooth scroll is switched on; if  _*0*_ - switched off. The second value means a scroll step in pixels. On-default the *scroll* value is set as _*(0, 4)*_.
*Draw_callback*
 The optional parameter. A calling object (function) whitch is called by the *Draw()* method after every text drawing. On-default is passed an empty function witch do nothing.
*rotate*
 The optional parameter. A flag defining the text rotation. On-default the *rotate* value is set as _*PORTRAIT*_. The *flags* module contains descriptions of all flags.
*align*
 The optional parameter. A flag defining the text alignment relatively of backgroud. On-default the *align* value is set as _*ALIGN_LEFT*_. The *flags* module contains descriptions of all flags.
=== Тип TextDraw ===
*Instances of TextDraw type have the following attributes:*

*Parser*
 A GTextParser.Parser object, where
*cloth* - a canvas on which a drawing will be made;
*text* -  a given text.


*size*
 A tuple consisted of two integers meaning area sizes (in pixels) on witch text will be drawn. Setting to size the value of None is equal to setting of a bg size. After changing of the size value it is necessary to call Parser.Calssets() method.
For example,
{{{
from ArchetypeUI.GUI import *
from ArchetypeUI.GUI.flags import *
from graphics import *
t = open("c:\\gpl.txt","rb")
txt = unicode(t.read())
t.close()
img = Image.new((240, 320))
gt = GTextParser.Parser(cloth = img, text = txt)
tp = TextPro.TextDraw(Parser = gt, Draw_callback = lambda: canv.blit(img))
gt.Calcsets()
tp.Draw()
tp.size = (120, 320)
gt.Calcsets()
tp.Draw()
}}}

*bg*
 A _*graphics.Image*_ object or some other analog object. Setting to *bg* the value of _*None*_ is equal to setting of a *Parser.cloth* copy. Read and write.
*bg_offset*
 A tuple consisted of two integers meaning in pixels an offset of the backgroud *bg* relatively of canvas *Parser.cloth* along coordinates _*x*_ and _*y*_. Read and write.
*text_offset*
 A tuple consisted of two integers meaning in pixels an offset of the text contained in *Parser.string_list* relatively of background *bg* along coordinates _*x*_ and _*y*_. Read and write.
*text_color*
 Text color. Supported all the ways of color setting supported by the *Parser.cloth* object. Read and write.
*shadow_offset*
 A tuple consisted of two integers meaning  in pixels an offset of the text shadow relatively of text along coordinates _*x*_ and _*y*_. If the *shadow_offset* value is set as _*(0, 0)*_, so shadow is absent.  Read and write.
*shadow_color*
 Text shadow color. Supported all the ways of color setting supported by the *Parser.cloth* object. Read and write.
*scroll*
 A tuple consisted of two integers which set a scroll parameters. If the first value is set as _*1*_, so smooth scroll is switched on; if  _*0*_ - switched off. The second value means a scroll step in pixels. Read and write.
*Draw_callback*
 A calling object (function) whitch is called by the *Draw()* method after every text drawing. Read and write.
*rotate*
 A flag defining the text rotation. The *flags* module contains descriptions of all flags. After changing of the *rotate* value it is necessary to call *Parser.Calssets()* method. Read and write.
Например,
{{{
from ArchetypeUI.GUI import *
from ArchetypeUI.GUI.flags import *
from graphics import *
img = Image.new((240, 320))
gt = GTextParser.Parser(cloth = img, text = u"Hello world!")
tp = TextPro.TextDraw(Parser = gt, Draw_callback = lambda: canv.blit(img))
gt.Calcsets()
tp.Draw()
tp.rotate = ROTATE_TO_LEFT
gt.Calcsets()
tp.Draw()
}}}

*align*
 A flag defining the text alignment relatively of backgroud. The *flags* module contains descriptions of all flags.
*Instances of TextDraw type have the following methods:*

*Draw(direction = 0, repeat = 1)*
 Draws text on the *Parser.cloth* canvas according to given parameters. Makes a step at one string forward if *direction* has value _*1*_ or at one string back if *direction* has vakue _*-1*_, and then redraws the text.  Если *direction* имеет значение _*1*_ то происходит рисование с  переходом на строку вперед, если _*-1*_ - на строку назад. A calling of the method with *direction* value of _*0*_ redraws the text according to current *Parser.string_list* content.
The calling repeats such number of times, whitch given in *repeat*.